---
- name: Install Docker on servers
  hosts: "{{ my_hosts | d('all') }}"
  become: yes
  tasks:

    - name: Install prerequisites
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        update_cache: yes

    - name: Determine the OS distribution
      command: lsb_release -is
      register: os_distribution

    - name: Get the OS version codename
      command: lsb_release -cs
      register: os_codename

    - name: Get system architecture
      command: dpkg --print-architecture
      register: system_architecture

    - name: Add Docker GPG key
      apt_key:
        url: "https://download.docker.com/linux/{{ 'debian' if os_distribution.stdout in ['Raspbian', 'Debian'] else 'ubuntu' }}/gpg"
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch={{ system_architecture.stdout }}] https://download.docker.com/linux/{{ 'debian' if os_distribution.stdout in ['Raspbian', 'Debian'] else 'ubuntu' }} {{ os_codename.stdout }} stable"
        state: present

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
          - docker-buildx-plugin
        update_cache: yes

    - name: Add user permissions to Docker group
      shell: "usermod -aG docker {{ ansible_env.SUDO_USER }}"

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Check Docker version
      command: docker --version
      register: docker_version

    - name: Display Docker version
      debug:
        msg: "Docker installed: {{ docker_version.stdout }}"